name: Deploy to AWS EC2 with Docker

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Create .env file with GitHub Secrets
        run: |
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application-local.yml
          
          # 주석 해제하고 필요한 시크릿을 추가
#          echo "GOOGLE_SHEETS_CLIENT_EMAIL=${{ secrets.GOOGLE_SHEETS_CLIENT_EMAIL }}" >> .env
#          echo "GOOGLE_SHEETS_PRIVATE_KEY=${{ secrets.GOOGLE_SHEETS_PRIVATE_KEY }}" >> .env
#          echo "GOOGLE_SHEETS_SPREADSHEET_ID=${{ secrets.GOOGLE_SHEETS_SPREADSHEET_ID }}" >> .env
#          echo "SPRING_PROFILE=${{ secrets.SPRING_PROFILE }}" >> .env

      - name: Check .env file contents
        run: cat .env

      - name: Check if .env file exists
        run: ls -l .env

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/daylongcafe:latest .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/daylongcafe:latest

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Copy .env file to EC2 server
            scp -i ${{ secrets.EC2_SSH_PRIVATE_KEY }} .env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/.env
            # Stop, remove old containers, pull new image
            docker stop daylongcafe || true
            docker rm daylongcafe || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/daylongcafe:latest
            # Run new container with environment variables from .env file
            docker run -d -p 8080:8080 --name daylongcafe \
              --env-file /home/ubuntu/.env \
              ${{ secrets.DOCKER_USERNAME }}/daylongcafe:latest
